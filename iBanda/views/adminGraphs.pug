extends layout_admin
block content
  link(rel='stylesheet', type='text/css', href='//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css')
  
  hr
  .container.bootstrap.snippet
    .row
      .col-lg-2.col-md-4
      .col-lg-10.col-md-12
        .main-box.no-header.clearfix
          .main-box-body.clearfix
            .row
              .col-md-12        
                .panel.panel-default          
              .panel-body
                .canvas-wrapper
                  canvas#lineChartDemo.main-chart(height='40', width='90')
    .row
      .col-lg-2.col-md-4
      .col-lg-10.col-md-12  
        .main-box.no-header.clearfix
          .main-box-body.clearfix
            .row
              .col-md-12        
                .panel.panel-default          
              .panel-body
                .canvas-wrapper
                  canvas#pie-chart.chart


    script(type='text/javascript', src='/javascripts/Chart.js')          
    script(type='text/javascript', src='/javascripts/jquery-1.11.1.min.js')
    script(type='text/javascript', src='/javascripts/bootstrap.min.js')
    script(type='text/javascript', src='/javascripts/chart.min.js')      
    script(type='text/javascript', src='/javascripts/easypiechart.js')
    script(type='text/javascript', src='/javascripts/easypiechart-data.js')
    script(type='text/javascript', src='/javascripts/bootstrap-datepicker.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js')
    script(src='https://github.com/nagix/chartjs-plugin-streaming/releases/download/v1.5.0/chartjs-plugin-streaming.min.js')
      
    script.
      var testObj = !{chart_data}
      var testObj2 = !{pie_chart}

      
      //- var chart4 = document.getElementById("pie-chart").getContext("2d");
      //-   window.myPie = new Chart(chart4, {type: 'pie', data:pieData })
      new Chart(document.getElementById("pie-chart"), {
          type: 'pie',
          data: {
            labels: ["Utilizador", "Produtor", "Administrador", "Obras", "Eventos"],
            datasets: [{
              label: "Quantidade de acessos pelas diferentes àreas",
              backgroundColor: ["#3e95cd", "#8e5ea2","#3cba9f","#e8c3b9","#c45850"],
              data: testObj2.data
            }]
          },
          options: {
            title: {
              display: true,
              text: 'Quantidade de acessos pelas diferentes àreas'
            }
          }
      });
      window.onload = function () {
          var ctxl = $("#lineChartDemo").get(0).getContext("2d");		
          var lineChart = new Chart(ctxl).Line(testObj.data, {
          responsive: true,
          scaleLineColor: "rgba(0,0,0,.2)",
          scaleGridLineColor: "rgba(0,0,0,.05)",
          scaleFontColor: "#c5c7cc"
          });

      //- var chart1 = document.getElementById("lineChartDemo").getContext("2d");
      //- window.myLine = new Chart(chart1).Line(lineChartData, {
      //- responsive: true,
      //- scaleLineColor: "rgba(0,0,0,.2)",
      //- scaleGridLineColor: "rgba(0,0,0,.05)",
      //- scaleFontColor: "#c5c7cc"
      //- });
      };

      function onRefresh(chart) {
          chart.config.data.datasets.forEach(function(dataset) {
              dataset.data.push({
                  x: Date.now(),
                  y: 132
              });
          });
      }

      var config = {
          type: 'line',
          scaleLineColor: "rgba(0,0,0,.2)",
          scaleGridLineColor: "rgba(0,0,0,.05)",
          scaleFontColor: "#c5c7cc",
          responsive: true,
          data: {
              labels: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
              datasets: [
                  {
                      label: "Pesquisas por obras",
                      fill: true,
                      backgroundColor: "rgba(220,220,220,0.2)",
                      borderColor: "rgba(220,220,220,1)",
                      pointColor : "rgba(220,220,220,1)",
                      pointStrokeColor : "#fff",
                      pointHighlightFill : "#fff",
                      pointHighlightStroke : "rgba(220,220,220,1)",
                      data: testObj.get_obras
                  },
                  {
                      label: "Inserção de obras",
                      fill: true,
                      backgroundColor: "rgba(48, 164, 255, 0.2)",
                      borderColor: "rgba(48, 164, 255, 1)",
                      pointColor : "rgba(48, 164, 255, 1)",
                      pointStrokeColor : "#fff",
                      pointHighlightFill : "#fff",
                      pointHighlightStroke : "rgba(48, 164, 255, 1)",
                      data: testObj.post_obras
                  }
              ]
          },        
          options: {
              //- title: {
              //- 	display: true,
              //- 	text: 'Line chart (hotizontal scroll) sample'
              //- },
              scales: {                    
                  xAxes: [{
                      //- type: 'realtime',
                      realtime: {
                          duration: 20000,
                          refresh: 1000,
                          delay: 2000,
                          onRefresh: onRefresh
                      }
                  }],
                  yAxes: [{
                      scaleLabel: {
                          display: true,
                          labelString: 'Número de pedidos'
                      }
                  }]
              },
              tooltips: {
                  mode: 'nearest',
                  intersect: false
              },
              hover: {
                  mode: 'nearest',
                  intersect: false
              }
          }
      };

      window.onload = function() {
          var ctxl = $("#lineChartDemo").get(0).getContext("2d");					
          window.myChart = new Chart(ctxl, config);
      };
      


      var ctxl = $("#lineChartDemo").get(0).getContext("2d");		
      var myChart = new Chart(ctxl, config);

      // your event listener code - assuming the event object has the timestamp and value properties
      function onReceive(event) {

          // append the new data to the existing chart data
          myChart.data.datasets[0].data.push(testObj.data);

          // update chart datasets keeping the current animation
          myChart.update({
              preservation: true
          });
      }






